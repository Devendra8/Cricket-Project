{"version":3,"sources":["Pages/FetchOrders.js","components/MainDoc.jsx","App.js","reportWebVitals.js","Pages/UserReducer.js","store.js","index.js"],"names":["FetchOrders","createAsyncThunk","a","fetch","response","json","res2","MainDoc","dispatch","useDispatch","title1","useSelector","state","articles1","title","description1","content","Source1","url","title2","articles2","description2","Source2","title3","articles3","description3","Source3","title4","articles4","description4","Source4","title5","articles5","description5","Source5","title6","articles6","description6","Source6","width","height","id","className","display","position","scrolling","href","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UserReducer","createSlice","name","initialState","status","error","reducers","extraReducers","pending","fulfilled","action","payload","data","rejected","message","actions","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84c25bf1.chunk.js","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit'\n\nexport const getPurchaseOrdersApiEndPoint =\n'https://inshortsapi.vercel.app/news?category=sports';\n\n\n\nexport const FetchOrders = createAsyncThunk(\n  'fetchOrders',\n  async () => {\n    const response = await fetch(getPurchaseOrdersApiEndPoint)\n    const res2 = await response.json()\n    return res2\n  })\n\n\n\n\n\n\n","import React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FetchOrders } from \"../Pages/FetchOrders\";\nimport Iframe from 'react-iframe'\n\nconst MainDoc = () => {\n\n    const dispatch = useDispatch();\n    //article1//\n    const title1 = useSelector((state) => state.articles1.title);\n    const description1 = useSelector((state) => state.articles1.content);\n    const Source1 = useSelector((state) => state.articles1.url);\n\n    //article2//\n    const title2 = useSelector((state) => state.articles2.title);\n    const description2 = useSelector((state) => state.articles2.content);\n    const Source2 = useSelector((state) => state.articles1.url);\n\n    //article3//\n    const title3 = useSelector((state) => state.articles3.title);\n    const description3 = useSelector((state) => state.articles3.content);\n    const Source3 = useSelector((state) => state.articles1.url);\n\n    //article4//\n    const title4 = useSelector((state) => state.articles4.title);\n    const description4 = useSelector((state) => state.articles4.content);\n    const Source4 = useSelector((state) => state.articles1.url);\n\n    //article5//\n    const title5 = useSelector((state) => state.articles5.title);\n    const description5 = useSelector((state) => state.articles5.content);\n    const Source5 = useSelector((state) => state.articles1.url);\n\n    //article6//\n    const title6 = useSelector((state) => state.articles6.title);\n    const description6 = useSelector((state) => state.articles6.content);\n    const Source6 = useSelector((state) => state.articles1.url);\n\n\n    // const data = []\n    // useEffect(() => {\n    //     dispatch(FetchOrders());\n    //   }, [dispatch]);\n\n    const changename = () => {\n        dispatch(FetchOrders());\n    }\n\n\n    return (\n        <>\n            <div>\n                <h1> Cricket Fans App</h1>\n                <h2> Live Cricket Score</h2>\n                <Iframe url=\"https://widget.crictimes.org/\"\n                    width=\"100%\"\n                    height=\"450px\"\n                    id=\"myId\"\n                    className=\"myClassname\"\n                    display=\"initial\"\n                    position=\"relative\"\n                    scrolling=\"yes\" />\n\n\n                <h2>Sports News</h2>\n                <div>\n                    <div className=\"article\" >\n                        <div className=\"box1\" >\n                            <h3><a href={Source1}>{title1}</a></h3>\n                            <p>{description1}</p>\n                            <p>{Source1}</p>\n                        </div>\n                        <div className=\"box2\">\n                            <h3>{title2}</h3>\n                            <p>{description2}</p>\n                            <p>{Source2}</p>\n                        </div>\n                        <div className=\"box3\">\n                            <h3>{title3}</h3>\n                            <p>{description3}</p>\n                            <p>{Source3}</p>\n                        </div>\n                        <div className=\"box4\">\n                            <h3>{title4}</h3>\n                            <p>{description4}</p>\n                            <p>{Source4}</p>\n                        </div>\n                        <div className=\"box5\">\n                            <h3>{title5}</h3>\n                            <p>{description5}</p>\n                            <p>{Source5}</p>\n                        </div>\n                        <div className=\"box6\">\n                            <h3>{title6}</h3>\n                            <p>{description6}</p>\n                            <p>{Source6}</p>\n                        </div>\n                    </div>\n                </div>\n                <button onClick={() => changename()}> Update Details</button>\n            </div>\n        </>\n    );\n};\n\nexport default MainDoc\n","import './App.css';\nimport MainDoc from './components/MainDoc'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainDoc />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from '@reduxjs/toolkit';\nimport {FetchOrders} from \"./FetchOrders\";\n\nexport const initialState = {\n    // cases:\"\",\n    articles1:\"\",\n    articles2:\"\",\n    articles3:\"\",\n    articles4:\"\",\n    articles5:\"\",\n    articles6:\"\",\n    // todayCases:\"\", \n    // deaths:\"\",\n    // todayDeaths:\"\",\n    // recovered:\"\",\n    // todayRecovered:\"\",\n    status: false,\n    error: \"\"\n}\n\nconst UserReducer = createSlice({\n    name: 'empty',\n    initialState,\n    reducers:{\n\n    },\n    extraReducers:{\n        [FetchOrders.pending]: (state) => {\n            state.status = \"loading\";\n            state.name = \"loading\";\n        },\n\n        [FetchOrders.fulfilled]:(state, action) => {\n            state.status = \"suceeded\";\n            state.articles1 = action.payload.data[0];\n            state.articles2 = action.payload.data[1];\n            state.articles3 = action.payload.data[2];\n            state.articles4 = action.payload.data[3];\n            state.articles5 = action.payload.data[4];\n            state.articles6 = action.payload.data[5];\n         },\n\n        [FetchOrders.rejected]:(state, action) => {\n            state.status = \"failed\";\n            state.error = action.error.message;\n\n        }\n\n    }\n})\n\nexport const FetchOrders1 = UserReducer.actions;\n\n//export const {} = UserReducer.actions\nexport default UserReducer.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport UserReducer from \"./Pages/UserReducer\";\n//import { persistReducer } from \"redux-persist\";\n//import storage from \"redux-persist/lib/storage\";\n\n// const reducers = combineReducers({\n//     purchaseOrders: UserReducer.reducer\n//   });\n  \n//   const persistConfig = {\n//     key: \"root\",\n//     storage\n//   };\n  \n//   const persistedReducer = persistReducer(persistConfig, reducers);\n\nconst store = configureStore({\n    reducer: UserReducer\n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from \"react-dom\";\n//import { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\n\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}